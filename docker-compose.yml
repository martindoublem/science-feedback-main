version: "3.7"

services:
  postgres:
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_min_duration_statement=0 -c log_statement=all -c log_duration=on
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_NAME}_password
      - POSTGRES_USER=${DB_NAME}_user
    image: postgres:10.1
    networks:
      - db_nw
    volumes:
      - "./docker_data/postgres:/var/lib/postgresql/data"

  flask:
    build:
      context: ./api
      dockerfile: ../dockerfiles/flask/Dockerfile
    command: >
      bash -c "set -x;
               cd /opt/services/flaskapp/src;
               pip install -r ./requirements.txt;
               python -m nltk.downloader punkt stopwords;
               while true; do python app.py; done;"
    depends_on:
      - postgres
    environment:
      - APP_NAME=${APP_NAME}
      - BUZZSUMO_API_KEY=$BUZZSUMO_API_KEY
      - COMMAND_NAME=${COMMAND_NAME}
      - ENV=${ENV:-development}
      - GIT_TAG=${GIT_TAG}
      - POSTGRES_URL=postgresql://${DB_NAME}_user:${DB_NAME}_password@postgres/${DB_NAME}
      - SCREEN_SHOT_MACHINE_KEY=$SCREEN_SHOT_MACHINE_KEY
      - TLD=${TLD}
    networks:
      - db_nw
      - web_nw
    volumes:
      - ./api:/opt/services/flaskapp/src

  nginx:
    build: dockerfiles/nginx
    depends_on:
      - flask
    networks:
      - web_nw
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./dockerfiles/nginx/conf.d:/etc/nginx/conf.d
      - ./certs:/etc/letsencrypt
      - ./certs-data:/data/letsencrypt

networks:
  db_nw:
    driver: bridge
  web_nw:
    driver: bridge

volumes:
  docker_data:
