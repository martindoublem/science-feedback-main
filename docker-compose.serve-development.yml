version: '3.2'

services:
  api-serve-development:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    command: >
      bash -c "set -x;
               cd /opt/api;
               pip install -r ./requirements.txt;
               python -m nltk.downloader punkt stopwords;
               while true; do python app.py; done;"
    container_name: ${APP_NAME}-api-serve-development
    depends_on:
      - postgres-serve-development
    environment:
      - APP_NAME=$APP_NAME
      - BUZZSUMO_API_KEY=$BUZZSUMO_API_KEY
      - COMMAND_NAME=$COMMAND_NAME
      - ENV=${ENV:-serve-development}
      - GIT_TAG=$GIT_TAG
      - OBJECT_STORAGE_URL=$OBJECT_STORAGE_URL
      - POSTGRES_URL=postgresql://${DB_NAME}_user:${DB_NAME}_password@postgres-serve-development/${DB_NAME}
      - SCREEN_SHOT_MACHINE_KEY=$SCREEN_SHOT_MACHINE_KEY
      - TLD=$TLD
    networks:
      - db_development_nw
      - web_development_nw
    volumes:
      - ./api:/opt/api

  nginx-serve-development:
    build: nginx
    container_name: ${APP_NAME}-nginx-serve-development
    depends_on:
      - api-serve-development
    networks:
      - web_development_nw
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d

  postgres-serve-development:
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_min_duration_statement=0 -c log_statement=all -c log_duration=on
    container_name: ${APP_NAME}-postgres-serve-development
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_NAME}_password
      - POSTGRES_USER=${DB_NAME}_user
    image: postgres:10.1
    networks:
      - db_development_nw
    volumes:
      - "./docker_data_serve-development/postgres:/var/lib/postgresql/data"

networks:
  db_development_nw:
    driver: bridge
  web_development_nw:
    driver: bridge

volumes:
  docker_data_serve-development:
