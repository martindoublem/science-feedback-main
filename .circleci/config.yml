version: 2.1

commands:
  test:
    parameters:
      key:
        type: string
      mode:
        type: string
    steps:
      - checkout
      - restore_cache:
          key: deps7-{{ checksum "requirements.txt" }}
      - restore_cache:
          key: <<parameters.key>>
      - run:
          name: Load <<parameters.mode>> images from cache if exists
          command: |
            set +o pipefail
            echo "BEFORE"
            docker images

            docker load -i ~/main-ci/docker-caches/<<parameters.mode>>/images.tar | true
            while read REPOSITORY TAG IMAGE_ID
              do
                echo "== Tagging $REPOSITORY $TAG $IMAGE_ID =="
                docker tag "$IMAGE_ID" "$REPOSITORY:$TAG"
            done < ~/main-ci/docker-caches/<<parameters.mode>>/images.list

            echo "AFTER"
            docker images
      - run:
          name: Build <<parameters.mode>> images
          command: |
            ./$COMMAND_NAME -m <<parameters.mode>> build
            echo "AFTER BUILD"
            docker images
      - run:
          name: Save <<parameters.mode>> images in caches
          command: |
            mkdir -p ~/main-ci/docker-caches/<<parameters.mode>>
            docker images | sed '1d' | awk '{print $1 " " $2 " " $3}' > ~/main-ci/docker-caches/<<parameters.mode>>/images.list
            docker save $(docker images -q) -o ~/main-ci/docker-caches/<<parameters.mode>>/images.tar
      - save_cache:
          key: <<parameters.key>>
          paths:
            - ~/main-ci/docker-caches/<<parameters.mode>>/images.list
            - ~/main-ci/docker-caches/<<parameters.mode>>/images.tar
      - run:
          name: Venv
          command: |
            . venv/bin/activate
      - run:
          name: Start <<parameters.mode>>
          command: |
            docker images
            ./$COMMAND_NAME -m <<parameters.mode>> start


jobs:
  build:
    working_directory: ~/main-ci
    machine:
      image: circleci/classic:latest
    steps:
      - checkout
      - restore_cache:
          key: deps7-{{ checksum "requirements.txt" }}
      - run:
          name: Install main requirements
          command: |
            python -m virtualenv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
      - save_cache:
          key: deps7-{{ checksum "requirements.txt" }}
          paths: ~/main-ci/venv
  test-api:
    working_directory: ~/main-ci
    machine:
      image: circleci/classic:latest
    steps:
      - test:
          key: deps7-{{ checksum "docker-compose.test-api.yml" }}-{{ checksum "./api/requirements.txt" }}-{{ checksum "./api/utils/nltk_downloader.py"}}
          mode: "test-api"
  test-end2end:
    working_directory: ~/main-ci
    machine:
      image: circleci/classic:latest
    steps:
      - test:
          key: deps7-{{ checksum "docker-compose.test-end2end.yml" }}-{{ checksum "./api/requirements.txt" }}-{{ checksum "./api/utils/nltk_downloader.py"}}-{{ checksum "./webapp/package.json"}}
          mode: "test-end2end"


workflows:
  version: 2
  commit:
    jobs:
      - build
      - test-api:
          requires:
            - build
      - test-end2end:
          requires:
            - build
