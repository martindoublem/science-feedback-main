version: 2.1

commands:
  build-test:
    parameters:
      mode:
        type: string
    steps:
      - checkout
      - restore_cache:
          key: deps6-{{ checksum "requirements.txt" }}
      - restore_cache:
          key: deps6-{{ checksum "docker-compose.<<parameters.mode>>.yml" }}-{{ checksum "./api/requirements.txt" }}-{{ checksum "./api/utils/nltk_downloader.py"}}
      - run:
          name: Load <<parameters.mode>> images from cache if exists
          command: |
            set +o pipefail
            echo "BEFORE"
            docker images
            docker load -i ~/main-ci/caches/${APP_NAME}_api_<<parameters.mode>>.tar | true
            echo "AFTER"
            docker images
      - run:
          name: Build <<parameters.mode>> images
          command: |
            ./$COMMAND_NAME -m <<parameters.mode>> build
            echo "AFTER BUILD"
            docker images
      - run:
          name: Save <<parameters.mode>> images in caches
          command: |
            mkdir -p ~/main-ci/caches/test-api
            docker save -o ~/main-ci/caches/${APP_NAME}_api_<<parameters.mode>>.tar ${APP_NAME}_api_<<parameters.mode>>:latest
  start-test:
    parameters:
      mode:
        type: string
    steps:
      - checkout
      - restore_cache:
          key: deps6-{{ checksum "requirements.txt" }}
      - restore_cache:
          key: deps6-{{ checksum "docker-compose.<<parameters.mode>>.yml" }}-{{ checksum "./api/requirements.txt" }}-{{ checksum "./api/utils/nltk_downloader.py"}}
          paths: ~/main-ci/caches/${APP_NAME}_api_<<parameters.mode>>.tar.tar
      - run:
          name: Load <<parameters.mode>> image from cache
          command: |
            set +o pipefail
            echo "BEFORE"
            docker images
            docker load -i ~/main-ci/caches/${APP_NAME}_api_<<parameters.mode>>.tar.tar | true
            echo "AFTER"
            docker images
      - run:
          name: Venv
          command: |
            . venv/bin/activate
      - run:
          name: Start <<parameters.mode>>
          command: |
            docker images
            ./$COMMAND_NAME -m <<parameters.mode>> start


jobs:
  build-setup:
    working_directory: ~/main-ci
    machine:
      image: circleci/classic:latest
    steps:
      - checkout
      - restore_cache:
          key: deps6-{{ checksum "requirements.txt" }}
      - run:
          name: Install main requirements
          command: |
            python -m virtualenv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
      - save_cache:
          key: deps6-{{ checksum "requirements.txt" }}
          paths: ~/main-ci/venv
  build-test-api:
    working_directory: ~/main-ci
    machine:
      image: circleci/classic:latest
    steps:
      - build-test:
          mode: "test-api"
  build-test-end2end:
    working_directory: ~/main-ci
    machine:
      image: circleci/classic:latest
    steps:
      - build-test:
          mode: "test-end2end"
  start-test-api:
    working_directory: ~/main-ci
    machine:
      image: circleci/classic:latest
    steps:
      - start-test:
          mode: "test-api"
  start-test-end2end:
    working_directory: ~/main-ci
    machine:
      image: circleci/classic:latest
    steps:
      - start-test:
          mode: "test-end2end"


workflows:
  version: 2
  commit:
    jobs:
      - build-setup
      - build-test-api:
          requires:
            - build-setup
      - build-test-end2end:
          requires:
            - build-setup
      - start-test-api:
          requires:
            - build-test-api
      - start-test-end2end:
          requires:
            - build-test-end2end
